{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww8800\viewh10620\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs28 \cf0 Model-View-Controller is separated into 3 main parts. The layout of this code is to better organize and present our codes. It also makes it simpler to read and is maintainable. The view is in the view file while the processing part of the application is in the model file and the controller handles them both.  \
\
3 main parts: \
View - the user interacts with the view. In other words, it represents the visual view of the model\
\
Controller - handles the user input and transfers the information to the model. You can think of this more like the controller is the environment that bridges the divide between the user and the system. \
\
Model - receives the info and updates the data. Another way to look at Model is that it represents knowledge because it\'92s what contains the actual data.\
\
Than the View checks with the state of the Model and responds accordingly. The View then waits for another interaction from the user. \
\
Example of MVC:\
Pull up any webpage and you\'92ll see a great example of MVC. The 
\i html structure
\i0  of the web page is the 
\b Model
\b0 , while the 
\i CSS stylesheet
\i0  is what controls the appearance which is the 
\b View
\b0 . The 
\i browser used to interact with the web page
\i0  is the 
\b Controller
\b0 .  }